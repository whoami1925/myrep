import mysql.connector
import tkinter as tk
from tkinter import messagebox

class EmployeeApp(tk.Tk):
    def __init__(self):
        super().__init__()

        self.title("Система учёта задач сотрудников")
        self.geometry("900x600")
        self.configure(bg="#2E2E2E")

        # Поля для логина
        self.label_username = tk.Label(self, text="Логин:", bg="#2E2E2E", fg="white")
        self.label_username.pack(pady=5)

        self.entry_username = tk.Entry(self)
        self.entry_username.pack(pady=5)

        # Поля для пароля
        self.label_password = tk.Label(self, text="Пароль:", bg="#2E2E2E", fg="white")
        self.label_password.pack(pady=5)

        self.entry_password = tk.Entry(self, show="*")
        self.entry_password.pack(pady=5)

        # Кнопка для входа
        self.button_login = tk.Button(self, text="Войти", command=self.on_login_click)
        self.button_login.pack(pady=20)

    def connect_to_db(self):
        try:
            conn = mysql.connector.connect(
                host="localhost",
                user="root",
                password="root",
                database="tom"
            )
            return conn
        except mysql.connector.Error as err:
            print(f"Error: {err}")
            return None

    def check_login(self, username, password):
        conn = self.connect_to_db()
        if conn is None:
            return False

        cursor = conn.cursor()
        cursor.execute("SELECT * FROM users WHERE username = %s", (username,))
        user = cursor.fetchone()

        conn.close()

        if user and user[2] == password:  # user[2] - это пароль
            return user[3]  # user[3] - это роль (user или admin)
        return False

    def on_login_click(self):
        username = self.entry_username.get()
        password = self.entry_password.get()

        if username and password:
            role = self.check_login(username, password)
            if role:
                if role == 'admin':
                    messagebox.showinfo("Добро пожаловать", "Вы вошли как администратор!")
                else:
                    messagebox.showinfo("Добро пожаловать", "Вы вошли как пользователь!")
            else:
                messagebox.showerror("Ошибка", "Неверный логин или пароль!")
        else:
            messagebox.showwarning("Ошибка", "Пожалуйста, заполните все поля!")

if __name__ == "__main__":
    app = EmployeeApp()
    app.mainloop()



-- Создание базы данных (если еще не существует)
CREATE DATABASE IF NOT EXISTS tom;

-- Использование базы данных
USE tom;

-- Создание таблицы пользователей
CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,  -- Уникальный идентификатор
    username VARCHAR(255) NOT NULL,     -- Логин пользователя
    password VARCHAR(255) NOT NULL,     -- Пароль пользователя
    role ENUM('user', 'admin') NOT NULL -- Роль (пользователь или администратор)
);

-- Добавление тестовых данных
INSERT INTO users (username, password, role) VALUES
('admin1', 'adminpassword', 'admin'),
('user1', 'userpassword', 'user');

-- Для безопасности пароли в реальном приложении следует хэшировать, а не хранить в открытом виде.
